# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  cypress: cypress-io/cypress@1

executors:
  postgres:
    docker:
      - image: cypress/base:12

      - image: postgres:latest
        environment:
          - POSTGRES_USER: postgres
          - POSTGRES_PASSWORD: postgres
          - POSTGRES_DB: postgres

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  tbf-collective-ci:
    jobs:
      # install and cache dependencies in this job
      # AND build the library once
      # then the workspace will be passed to other jobs
      - cypress/install:
          name: Install
          build: npm run transpile
          pre-steps:
            - run: 'echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc'

      - cypress/run:
          name: Test
          executor: postgres
          requires:
            - Install
          pre-steps:
            - run:
                name: üèÑ Copy test env vars
                command: cp .env.test .env
            - run:
                name: üõ† Setup Database
                command: npx prisma migrate reset --force
                environment:
                  DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/postgres'
            - run:
                name: ‚öôÔ∏è Build
                command: npm run build
                environment:
                  DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/postgres'
          # notice a trick to avoid re-installing dependencies
          # in this job - a do-nothing "install-command" parameter
          install-command: echo 'Nothing to install in this job'
          command: npx cy2 run --record --parallel --key ${{ secrets.CYPRESS_RECORD_KEY }} --ci-build-id "${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt}}"
          start: DATABASE_URL="postgresql://postgres:postgres@localhost:5432/postgres" npm run start:mocks
          wait-on: 'http://localhost:8811'
