name: 🚀 Deploy
on:
  push:
    branches:
      - master
      - dev
  pull_request: { }
permissions:
  actions: write
  contents: read
#env:
#  GITHUB_TOKEN: ${{secrets.TAILWIND_UI_TOKEN}}
#  NODE_AUTH_TOKEN: ${{secrets.TAILWIND_UI_TOKEN}}
#  NPM_TOKEN: ${{secrets.TAILWIND_UI_TOKEN}}

jobs:
  precheck:
    name: 📋 Pre-check
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@mando-collabs'

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        env:
          NODE_AUTH_TOKEN: ${{secrets.TAILWIND_UI_TOKEN}}

      - name: ⚡ Run vitest
        run: npm run test -- --coverage

      - name: 🔎 Type check
        run: npm run typecheck --if-present

      - name: 🧹 Lint
        run: npm run lint

  cypress:
    name: ⚫️ Cypress
    runs-on: ubuntu-latest
    if: ${{ false }}
    env:
      ALGOLIA_APP_ID: ${{secrets.ALGOLIA_APP_ID}}
      ALGOLIA_API_KEY: ${{secrets.ALGOLIA_API_KEY}}
      ALGOLIA_INDEX_NAME: ${{secrets.ALGOLIA_INDEX_NAME}}
      ALGOLIA_SEARCH_ONLY_API_KEY: ${{secrets.ALGOLIA_SEARCH_ONLY_API_KEY}}
      CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
      CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}
    strategy:
      matrix:
        containers: [1, 2]
      fail-fast: false
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏄 Copy test env vars
        run: cp .env.test .env

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@mando-collabs'

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        env:
          NODE_AUTH_TOKEN: ${{secrets.TAILWIND_UI_TOKEN}}

      - name: 🐳 Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker-compose up -d && sleep 3
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/postgres'

      - name: 🛠 Setup Database
        run: npx prisma migrate reset --force

      - name: ⚙️ Build
        run: npm run build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v4
        with:
          command: npx cy2 run --record --parallel --key ${{ secrets.CYPRESS_RECORD_KEY }} --ci-build-id "${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt}}"
          start: npm run start:mocks
          wait-on: 'http://localhost:8811'
        env:
          PORT: '8811'
          CYPRESS_API_URL: "https://cypress-director.fly.dev"

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots


  build:
    name: 🐳 Build
    # only build/deploy master branch on pushes
    if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v2
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: 🐳 Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            TAILWIND_UI_TOKEN=${{ secrets.TAILWIND_UI_TOKEN }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [ precheck, cypress, build ]
    # only build/deploy master branch on pushes
    if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: 'deploy --app ${{ steps.app_name.outputs.value }}-staging --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: 'deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
